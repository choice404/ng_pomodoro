{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TaskModalComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let TaskModalComponent = /*#__PURE__*/(() => {\n  class TaskModalComponent {\n    constructor() {\n      this.emitCloseModal = new EventEmitter();\n      this.emitAddTask = new EventEmitter();\n      this.taskName = \"\";\n      this.taskDescription = \"\";\n      this.pomodoroEstimate = 1;\n      this.error = false;\n      this.errorMessage = \"\";\n    }\n    onClickExitModal(event) {\n      if (event.target === event.currentTarget) {\n        this.emitCloseModal.emit(false);\n      }\n    }\n    onClickAddTask() {\n      if (this.taskName === \"\") {\n        this.logError(\"Please enter a task name\");\n        return;\n      }\n      if (this.pomodoroEstimate < 1) {\n        this.logError(\"Please enter a valid pomodoro estimate\");\n        return;\n      }\n      this.emitAddTask.emit({\n        \"name\": this.taskName,\n        \"description\": this.taskDescription,\n        \"pomodoroEstimate\": this.pomodoroEstimate\n      });\n      this.emitCloseModal.emit(false);\n    }\n    logError(message) {\n      console.log(message);\n      this.errorMessage = message;\n      this.error = true;\n    }\n    static #_ = this.ɵfac = function TaskModalComponent_Factory(t) {\n      return new (t || TaskModalComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskModalComponent,\n      selectors: [[\"app-task-modal\"]],\n      outputs: {\n        emitCloseModal: \"emitCloseModal\",\n        emitAddTask: \"emitAddTask\"\n      },\n      decls: 15,\n      vars: 4,\n      consts: [[1, \"modal-backdrop\", 3, \"click\"], [1, \"modal\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"taskName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"rows\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"pomodoroEstimate\", \"min\", \"1\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [1, \"error-message\"]],\n      template: function TaskModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵlistener(\"click\", function TaskModalComponent_Template_div_click_0_listener($event) {\n            return ctx.onClickExitModal($event);\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"form\");\n          i0.ɵɵtemplate(3, TaskModalComponent_div_3_Template, 3, 1, \"div\", 2);\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Task Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskModalComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.taskName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Task Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"textarea\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskModalComponent_Template_textarea_ngModelChange_9_listener($event) {\n            return ctx.taskDescription = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Extimated Pomodoros\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TaskModalComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.pomodoroEstimate = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function TaskModalComponent_Template_button_click_13_listener() {\n            return ctx.onClickAddTask();\n          });\n          i0.ɵɵtext(14, \"Save Task\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.taskName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.taskDescription);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.pomodoroEstimate);\n        }\n      },\n      dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinValidator, i2.NgModel, i2.NgForm],\n      styles: [\".IBM-font[_ngcontent-%COMP%], .IBM-font-hero[_ngcontent-%COMP%]{font-family:\\\"IBM Plex Serif\\\"}.bebas-font[_ngcontent-%COMP%]{font-family:Bebas Neue}.font-monospace[_ngcontent-%COMP%]{font-family:Space Mono,monospace}.font-sans[_ngcontent-%COMP%]{font-family:Comic Sans MS,Comic Sans,cursive}.error-message[_ngcontent-%COMP%]{color:red;font-size:1rem;text-align:center;position:absolute}.modal-backdrop[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;background:rgba(0,0,0,.5);width:100vw;height:100vh}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;text-align:center;border-radius:10px;color:#fff}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   .modalText[_ngcontent-%COMP%]{margin:10px}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{max-width:420px;margin:30px auto;background:#e6e6e6;text-align:left;padding:40px;border-radius:10px}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#000;display:inline-block;margin:25px 0 15px;font-size:1.5em;text-transform:uppercase;font-family:Bebas Neue;letter-spacing:1px;font-weight:700}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%], .modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{display:block;padding:10px 6px;width:100%;box-sizing:border-box;border:none;border-bottom:1px solid #ddd;color:#555}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{display:inline-block;width:16px;margin:0 10px 0 0;position:relative;top:2px}.modal-backdrop[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:#0b6dff;border:0;padding:10px 20px;margin-top:20px;color:#fff;border-radius:20px}\"]\n    });\n  }\n  return TaskModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
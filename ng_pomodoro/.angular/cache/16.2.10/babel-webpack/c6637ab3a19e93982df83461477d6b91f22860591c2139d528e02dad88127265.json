{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TimerComponent = /*#__PURE__*/(() => {\n  class TimerComponent {\n    constructor() {\n      this.minutes = 0;\n      this.seconds = 0;\n      this.minutesDisplay = \"25\";\n      this.secondsDisplay = \"00\";\n      this.timer = \"pomodoro\";\n      this.isTimerRunning = false;\n      this.buttonLabel = \"Start\";\n      this.pomodoroCount = 0;\n    }\n    selectPomodoro() {\n      if (this.isTimerRunning) {\n        alert(\"Timer is currently running!\");\n        return;\n      }\n      this.timer = \"pomodoro\";\n      this.minutes = 25;\n      this.seconds = 0;\n      this.minutesDisplay = this.displayTimer(this.minutes);\n      this.secondsDisplay = this.displayTimer(this.seconds);\n    }\n    selectShortBreak() {\n      if (this.isTimerRunning) {\n        alert(\"Timer is currently running!\");\n        return;\n      }\n      this.timer = \"shortBreak\";\n      this.minutes = 5;\n      this.seconds = 0;\n      this.minutesDisplay = this.displayTimer(this.minutes);\n      this.secondsDisplay = this.displayTimer(this.seconds);\n    }\n    selectLongBreak() {\n      if (this.isTimerRunning) {\n        alert(\"Timer is currently running!\");\n        return;\n      }\n      this.timer = \"longBreak\";\n      this.minutes = 15;\n      this.seconds = 0;\n      this.minutesDisplay = this.displayTimer(this.minutes);\n      this.secondsDisplay = this.displayTimer(this.seconds);\n    }\n    displayTimer(time) {\n      return time < 10 ? \"0\" + time : time.toString();\n    }\n    handleTimer() {\n      if (this.buttonLabel === \"Start\") {\n        this.startTimer();\n        this.buttonLabel = \"Pause\";\n      } else if (this.buttonLabel === \"Pause\") {\n        this.pauseTimer();\n        this.buttonLabel = \"Start\";\n      }\n    }\n    resetTimer() {\n      if (this.isTimerRunning) {\n        alert(\"Timer is currently running!\");\n        return;\n      }\n      if (this.timer === \"pomodoro\") {\n        this.minutes = 25;\n        this.seconds = 0;\n        this.minutesDisplay = this.displayTimer(this.minutes);\n        this.secondsDisplay = this.displayTimer(this.seconds);\n      } else if (this.timer === \"shortBreak\") {\n        this.minutes = 5;\n        this.seconds = 0;\n        this.minutesDisplay = this.displayTimer(this.minutes);\n        this.secondsDisplay = this.displayTimer(this.seconds);\n      } else if (this.timer === \"longBreak\") {\n        this.minutes = 15;\n        this.seconds = 0;\n        this.minutesDisplay = this.displayTimer(this.minutes);\n        this.secondsDisplay = this.displayTimer(this.seconds);\n      }\n    }\n    pauseTimer() {\n      this.isTimerRunning = false;\n      clearInterval(this.interval);\n    }\n    startTimer() {\n      let minutes = parseInt(this.minutesDisplay);\n      let seconds = parseInt(this.secondsDisplay);\n      let totalSeconds = minutes * 60 + seconds;\n      console.log(\"Total seconds: \" + totalSeconds);\n      console.log(\"Minutes: \" + minutes);\n      console.log(\"Seconds: \" + seconds);\n      this.isTimerRunning = true;\n      const timer = () => {\n        totalSeconds--;\n        let minutesLeft = Math.floor(totalSeconds / 60);\n        let secondsLeft = totalSeconds % 60;\n        this.minutesDisplay = this.displayTimer(minutesLeft);\n        this.secondsDisplay = this.displayTimer(secondsLeft);\n        if (minutesLeft <= 0 && secondsLeft <= 0) {\n          this.isTimerRunning = false;\n          clearInterval(this.interval);\n          alert(\"Timer is done!\");\n          if (this.timer === \"pomodoro\") {\n            this.pomodoroCount++;\n            // this.emitPomodoroo.emit()\n            if (this.pomodoroCount === 4) {\n              this.pomodoroCount = 0;\n              this.selectLongBreak();\n            } else {\n              this.selectShortBreak();\n            }\n          } else if (this.timer === \"shortBreak\") {\n            this.selectPomodoro();\n          } else if (this.timer === \"longBreak\") {\n            this.selectPomodoro();\n            this.pomodoroCount = 0;\n          }\n        }\n      };\n      this.interval = setInterval(timer, 1000);\n    }\n    static #_ = this.ɵfac = function TimerComponent_Factory(t) {\n      return new (t || TimerComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TimerComponent,\n      selectors: [[\"app-timer\"]],\n      decls: 22,\n      vars: 9,\n      consts: [[1, \"timer-wrapper\"], [1, \"button-wrapper\"], [1, \"button\", 3, \"click\"], [1, \"bebas-font\"], [1, \"pomodoro-wrapper\"], [1, \"timer\"], [1, \"time\", \"bebas-font\"], [1, \"button\", \"bebas-font\"], [3, \"click\"]],\n      template: function TimerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function TimerComponent_Template_div_click_2_listener() {\n            return ctx.selectPomodoro();\n          });\n          i0.ɵɵelementStart(3, \"h4\", 3);\n          i0.ɵɵtext(4, \"Pomodoro\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function TimerComponent_Template_div_click_5_listener() {\n            return ctx.selectShortBreak();\n          });\n          i0.ɵɵelementStart(6, \"h4\", 3);\n          i0.ɵɵtext(7, \"Short Break\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function TimerComponent_Template_div_click_8_listener() {\n            return ctx.selectLongBreak();\n          });\n          i0.ɵɵelementStart(9, \"h4\", 3);\n          i0.ɵɵtext(10, \"Long Break\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"h1\", 6);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 7)(17, \"h1\", 8);\n          i0.ɵɵlistener(\"click\", function TimerComponent_Template_h1_click_17_listener() {\n            return ctx.handleTimer();\n          });\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 7)(20, \"h1\", 8);\n          i0.ɵɵlistener(\"click\", function TimerComponent_Template_h1_click_20_listener() {\n            return ctx.resetTimer();\n          });\n          i0.ɵɵtext(21, \" Reset \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵclassProp(\"pomodoro\", ctx.timer == \"pomodoro\")(\"short-break\", ctx.timer == \"shortBreak\")(\"long-break\", ctx.timer == \"longBreak\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\" \", ctx.minutesDisplay, \":\", ctx.secondsDisplay, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.buttonLabel, \" \");\n        }\n      },\n      styles: [\".IBM-font[_ngcontent-%COMP%], .IBM-font-hero[_ngcontent-%COMP%]{font-family:\\\"IBM Plex Serif\\\"}.bebas-font[_ngcontent-%COMP%]{font-family:Bebas Neue}.font-monospace[_ngcontent-%COMP%]{font-family:Space Mono,monospace}.font-sans[_ngcontent-%COMP%]{font-family:Comic Sans MS,Comic Sans,cursive}.timer-wrapper[_ngcontent-%COMP%]{padding-top:10rem}.timer-wrapper[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.timer-wrapper[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]{margin:0 1rem;padding:.5rem 1rem;border-radius:5px;border:none;font-size:1.5rem;cursor:pointer;transition:all .2s ease-in-out}.timer-wrapper[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]:hover{transform:scale(1.1)}.timer-wrapper[_ngcontent-%COMP%]   .button-wrapper[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]:active{transform:scale(.9)}.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]{width:100vw}.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:35rem;height:15rem;border-radius:10px;font-size:5rem;color:#fff}@media (max-width: 600px){.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]   .timer[_ngcontent-%COMP%]{width:20rem;height:10rem}}.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]   .pomodoro[_ngcontent-%COMP%]{margin:auto;background-color:#f44336}.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]   .short-break[_ngcontent-%COMP%]{margin:auto;background-color:#4caf50}.timer-wrapper[_ngcontent-%COMP%]   .pomodoro-wrapper[_ngcontent-%COMP%]   .long-break[_ngcontent-%COMP%]{margin:auto;background-color:#2196f3}\"]\n    });\n  }\n  return TimerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../new-task/new-task.component\";\nimport * as i3 from \"../task-tab/task-tab.component\";\nimport * as i4 from \"../task-modal/task-modal.component\";\nfunction TaskComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"app-task-modal\", 8);\n    i0.ɵɵlistener(\"emitCloseModal\", function TaskComponent_div_0_Template_app_task_modal_emitCloseModal_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.closeModal($event));\n    })(\"emitAddTask\", function TaskComponent_div_0_Template_app_task_modal_emitAddTask_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addNewTask($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"app-task-tab\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r5);\n  }\n}\nexport let TaskComponent = /*#__PURE__*/(() => {\n  class TaskComponent {\n    constructor() {\n      this.isModal = false;\n      this.tasks = [];\n    }\n    showModal(modal) {\n      this.isModal = modal;\n    }\n    closeModal(modal) {\n      this.isModal = modal;\n    }\n    addNewTask(task) {\n      this.tasks.push({\n        \"name\": task.name,\n        \"description\": task.description,\n        \"isCompleted\": false,\n        \"pomodoroEstimate\": task.pomodoroEstimate\n      });\n    }\n    static #_ = this.ɵfac = function TaskComponent_Factory(t) {\n      return new (t || TaskComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskComponent,\n      selectors: [[\"app-task\"]],\n      decls: 8,\n      vars: 2,\n      consts: [[\"class\", \"modal-wrapper\", 4, \"ngIf\"], [1, \"task-wrapper\"], [1, \"task-title\"], [1, \"bebas-font\"], [3, \"newTaskEvent\"], [1, \"task-list-wrapper\"], [\"class\", \"task-list\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-wrapper\"], [3, \"emitCloseModal\", \"emitAddTask\"], [1, \"task-list\"], [3, \"task\"]],\n      template: function TaskComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TaskComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Tasks\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"app-new-task\", 4);\n          i0.ɵɵlistener(\"newTaskEvent\", function TaskComponent_Template_app_new_task_newTaskEvent_5_listener($event) {\n            return ctx.showModal($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵtemplate(7, TaskComponent_div_7_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isModal);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.NewTaskComponent, i3.TaskTabComponent, i4.TaskModalComponent],\n      styles: [\".IBM-font[_ngcontent-%COMP%], .IBM-font-hero[_ngcontent-%COMP%]{font-family:\\\"IBM Plex Serif\\\"}.bebas-font[_ngcontent-%COMP%]{font-family:Bebas Neue}.font-monospace[_ngcontent-%COMP%]{font-family:Space Mono,monospace}.font-sans[_ngcontent-%COMP%]{font-family:Comic Sans MS,Comic Sans,cursive}.modal-wrapper[_ngcontent-%COMP%]{position:fixed;z-index:100}.task-wrapper[_ngcontent-%COMP%]{width:100vw;margin:7rem 0}.task-wrapper[_ngcontent-%COMP%]   .task-list-wrapper[_ngcontent-%COMP%]{width:35rem;display:flex;flex-direction:column;justify-content:center;align-items:center;margin:2rem auto;background-color:#fff;border-radius:10px;transition:all .2s ease-in-out}@media (max-width: 600px){.task-wrapper[_ngcontent-%COMP%]   .task-list-wrapper[_ngcontent-%COMP%]{width:20rem}}.task-wrapper[_ngcontent-%COMP%]   .task-list-wrapper[_ngcontent-%COMP%]   .task-list[_ngcontent-%COMP%]{margin:2rem 0;width:80%;border-bottom:1px solid #ddd}.task-wrapper[_ngcontent-%COMP%]   .task-title[_ngcontent-%COMP%]{color:#000;font-size:3rem;text-align:center;margin:auto;width:auto}\"]\n    });\n  }\n  return TaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}